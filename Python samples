[
    "if x > 0:\n    print('Positive')",
    "pass",
    "for i in range(10):\n    print(i)",
    "x = 5",
    "x = 5",
    "# This is a comment",
    "import os\nfor i in range(5):\n    print(i)",
    "def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
    "assert x == 10, 'x should be 10'",
    "def greet():\n    print('Hello, world!')",
    "if x > 0:\n    print('Positive')",
    "with open('file.txt', 'r') as file:\n    data = file.read()",
    "def sum(a, b):\n    return a + b",
    "class MyClass:\n    def __init__(self, value):\n        self.value = value",
    "def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
    "import os\nfor i in range(5):\n    print(i)",
    "print('Hello, Python!')",
    "def sum(a, b):\n    return a + b",
    "# This is a comment",
    "import sys\nsys.exit()",
    "def greet():\n    print('Hello, world!')",
    "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)",
    "import os\nfor i in range(5):\n    print(i)",
    "x = 5",
    "if x > 0:\n    print('Positive')",
    "def greet():\n    print('Hello, world!')",
    "assert x == 10, 'x should be 10'",
    "def sum(a, b):\n    return a + b",
    "print('Hello, Python!')",
    "return x * 2",
    "# This is a comment",
    "def greet():\n    print('Hello, world!')",
    "if x > 0:\n    print('Positive')",
    "def greet():\n    print('Hello, world!')",
    "import sys\nsys.exit()",
    "class MyClass:\n    def __init__(self, value):\n        self.value = value",
    "print('Hello, Python!')",
    "return x * 2",
    "def sum(a, b):\n    return a + b",
    "assert x == 10, 'x should be 10'",
    "for i in range(10):\n    print(i)",
    "# This is a comment",
    "if x > 0:\n    print('Positive')",
    "x = 5",
    "while x < 5:\n    x += 1",
    "assert x == 10, 'x should be 10'",
    "if x > 0:\n    print('Positive')",
    "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)",
    "for i in range(10):\n    print(i)",
    "import sys\nsys.exit()",
    "raise ValueError('An error occurred')",
    "return x * 2",
    "pass",
    "# This is a comment",
    "try:\n    x = int(input())\nexcept ValueError:\n    print('Invalid input')",
    "try:\n    x = int(input())\nexcept ValueError:\n    print('Invalid input')",
    "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)",
    "with open('file.txt', 'r') as file:\n    data = file.read()",
    "print('Hello, Python!')",
    "import sys\nsys.exit()",
    "assert x == 10, 'x should be 10'",
    "def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
    "with open('file.txt', 'r') as file:\n    data = file.read()",
    "# This is a comment",
    "return x * 2",
    "raise ValueError('An error occurred')",
    "def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
    "return x * 2",
    "assert x == 10, 'x should be 10'",
    "for i in range(10):\n    print(i)",
    "def sum(a, b):\n    return a + b",
    "return x * 2",
    "if x > 0:\n    print('Positive')",
    "x = 5",
    "pass",
    "class MyClass:\n    def __init__(self, value):\n        self.value = value",
    "x = 5",
    "with open('file.txt', 'r') as file:\n    data = file.read()",
    "def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
    "for i in range(10):\n    print(i)",
    "# This is a comment",
    "lambda x: x + 1",
    "class MyClass:\n    def __init__(self, value):\n        self.value = value",
    "pass",
    "print('Hello, Python!')",
    "def greet():\n    print('Hello, world!')",
    "import os\nfor i in range(5):\n    print(i)",
    "with open('file.txt', 'r') as file:\n    data = file.read()",
    "raise ValueError('An error occurred')",
    "pass",
    "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)",
    "while x < 5:\n    x += 1",
    "if x > 0:\n    print('Positive')",
    "try:\n    x = int(input())\nexcept ValueError:\n    print('Invalid input')",
    "assert x == 10, 'x should be 10'"
]
